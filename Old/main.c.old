#include "Includes.h"

typedef struct{
    char *find;
    char *replace;
}Rule;

typedef struct Match_s{
    const char *match;
    const char *rest;
    struct Match_s *next;
}Match;

Match* getMatch(const char *str, const char *find)
{
    const char *strMatch;
    if(*str == '\0' || (strMatch = strstr(str, find)) == NULL)
        return NULL;
    Match *ret = calloc(1, sizeof(Match));
    ret->match = strMatch;
    ret->rest = strMatch+strlen(find);
    return ret;
}

Match* matchListAppend(Match *list, const char *str, const char *find)
{
    if(list == NULL)
        return getMatch(str, find);
    Match *current = list;
    while(current->next != NULL)
        current = current->next;
    current->next = getMatch(current->match+1);
}

Match* matchList(const char *str, const char *find)
{
    Match *list = matchListAppend(NULL, str, find);

}



const char* applyRule(const char *str, const Rule rule);

int main(int argc, char const *argv[])
{
    Match *list = matchList(str, find);
    substituteList(str, replace, list);

    return 0;
}
